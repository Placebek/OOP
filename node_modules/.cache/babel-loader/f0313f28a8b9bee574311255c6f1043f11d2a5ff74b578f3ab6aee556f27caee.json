{"ast":null,"code":"import { OPEN_LARGE_WINDOW } from \"../actions/musicWindowAction\";\nconst initialState = {\n  isOpenLargeWindow: false,\n  isOpenSmallWindow: false\n};\nconst windowReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_LARGE_WINDOW:\n      return {\n        ...state,\n        isOpenLargeWindow: true\n      };\n    case CLOSE_LARGE_WINDOW:\n      return {\n        ...state,\n        isOpenLargeWindow: false\n      };\n    case OPEN_SMALL_WINDOW:\n      return {\n        ...state,\n        isOpenSmallWindow: true\n      };\n    case CLOSE_SMALL_WINDOW:\n      return {\n        ...state,\n        isOpenSmallWindow: false\n      };\n    default:\n      return state;\n  }\n};\nexport default windowReducer;","map":{"version":3,"names":["OPEN_LARGE_WINDOW","initialState","isOpenLargeWindow","isOpenSmallWindow","windowReducer","state","action","type","CLOSE_LARGE_WINDOW","OPEN_SMALL_WINDOW","CLOSE_SMALL_WINDOW"],"sources":["D:/ReactTailwind/first_project/src/redux/reducers/windowReducers.jsx"],"sourcesContent":["import { OPEN_LARGE_WINDOW } from \"../actions/musicWindowAction\";\r\n\r\nconst initialState = {\r\n    isOpenLargeWindow: false,\r\n    isOpenSmallWindow: false,\r\n}\r\n\r\nconst windowReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_LARGE_WINDOW:\r\n            return {\r\n                ...state,\r\n                isOpenLargeWindow: true\r\n            }\r\n\r\n        case CLOSE_LARGE_WINDOW:\r\n            return {\r\n                ...state,\r\n                isOpenLargeWindow: false\r\n            }\r\n\r\n        case OPEN_SMALL_WINDOW:\r\n            return {\r\n                ...state,\r\n                isOpenSmallWindow: true\r\n            }\r\n\r\n        case CLOSE_SMALL_WINDOW:\r\n            return {\r\n                ...state,\r\n                isOpenSmallWindow: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default windowReducer;"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,8BAA8B;AAEhE,MAAMC,YAAY,GAAG;EACjBC,iBAAiB,EAAE,KAAK;EACxBC,iBAAiB,EAAE;AACvB,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,iBAAiB;MAClB,OAAO;QACH,GAAGK,KAAK;QACRH,iBAAiB,EAAE;MACvB,CAAC;IAEL,KAAKM,kBAAkB;MACnB,OAAO;QACH,GAAGH,KAAK;QACRH,iBAAiB,EAAE;MACvB,CAAC;IAEL,KAAKO,iBAAiB;MAClB,OAAO;QACH,GAAGJ,KAAK;QACRF,iBAAiB,EAAE;MACvB,CAAC;IAEL,KAAKO,kBAAkB;MACnB,OAAO;QACH,GAAGL,KAAK;QACRF,iBAAiB,EAAE;MACvB,CAAC;IAEL;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}