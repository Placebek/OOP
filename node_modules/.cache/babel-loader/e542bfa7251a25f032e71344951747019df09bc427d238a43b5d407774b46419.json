{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactTailwind\\\\first_project\\\\src\\\\components\\\\Counter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [text, setText] = useState('Текст, который будет изменён.');\n  const [isChanged, setIsChanged] = useState(false);\n  const handleClick = () => {\n    setText('Текст изменён!');\n    setIsChanged(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\",\n        children: \"\\u041D\\u0430\\u0436\\u043C\\u0438 \\u043C\\u0435\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mt-4 text-xl ${isChanged ? 'font-bold text-green-500' : ''}`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Counter, \"quyrjyf5Y10HI6SZ0r2t+BwZ3kU=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Counter","_s","text","setText","isChanged","setIsChanged","handleClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactTailwind/first_project/src/components/Counter.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Counter = () => {\r\n    const [text, setText] = useState('Текст, который будет изменён.');\r\n    const [isChanged, setIsChanged] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setText('Текст изменён!');\r\n        setIsChanged(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center h-screen bg-gray-100\">\r\n            <div>\r\n                <button\r\n                    onClick={handleClick}\r\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\"\r\n                >\r\n                    Нажми меня\r\n                </button>\r\n                <p className={`mt-4 text-xl ${isChanged ? 'font-bold text-green-500' : ''}`}>\r\n                    {text}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Counter;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,+BAA+B,CAAC;EACjE,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBH,OAAO,CAAC,gBAAgB,CAAC;IACzBE,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACIN,OAAA;IAAKQ,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eAClET,OAAA;MAAAS,QAAA,gBACIT,OAAA;QACIU,OAAO,EAAEH,WAAY;QACrBC,SAAS,EAAC,4DAA4D;QAAAC,QAAA,EACzE;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTd,OAAA;QAAGQ,SAAS,EAAE,gBAAgBH,SAAS,GAAG,0BAA0B,GAAG,EAAE,EAAG;QAAAI,QAAA,EACvEN;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAxBKD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}