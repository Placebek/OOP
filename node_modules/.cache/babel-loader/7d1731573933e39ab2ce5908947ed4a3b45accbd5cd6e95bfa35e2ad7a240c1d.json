{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Juzz from '../../templates/icons/Juzz.jpeg';\nimport Dom50Logo from '../../templates/icons/Дом 50.jpeg';\nconst initialState = {\n  isLargeWindowOpen: false,\n  isSmallWindowOpen: false,\n  windowData: [{\n    id: 1,\n    img: {\n      Juzz\n    },\n    title: 'Sheker',\n    authorName: 'TBRN',\n    liked: false\n  }, {\n    id: 2,\n    img: {\n      Dom50Logo\n    },\n    title: 'Дом 50',\n    authorName: 'NOVЫЙ',\n    liked: true\n  }, {\n    id: 3,\n    img: {\n      Dom50Logo\n    },\n    title: 'Uide',\n    authorName: 'TBRN',\n    liked: true\n  }]\n};\nconst windowSlice = createSlice({\n  name: 'windows',\n  initialState,\n  reducers: {\n    openLargeWindow(state) {\n      if (!state.isSmallWindowOpen) state.isLargeWindowOpen = true;\n    },\n    closeLargeOpenSmallWindow(state) {\n      state.isLargeWindowOpen = false;\n      state.isSmallWindowOpen = true;\n    },\n    changeSmallWindow(state, action) {\n      const {\n        id,\n        newTitle,\n        newAuthor,\n        newImg,\n        liked\n      } = action.payload;\n      const window = state.windowData.find(window => window.id === id);\n      if (window) {\n        // Изменение данных конкретного элемента\n        window.title = newTitle || window.title;\n        window.authorName = newAuthor || window.authorName;\n        window.img = newImg || window.img;\n        window.liked = liked !== undefined ? liked : window.liked;\n      }\n    }\n  }\n});\nexport const {\n  openLargeWindow,\n  closeLargeOpenSmallWindow,\n  changeSmallWindow\n} = windowSlice.actions;\nexport default windowSlice.reducer;","map":{"version":3,"names":["createSlice","Juzz","Dom50Logo","initialState","isLargeWindowOpen","isSmallWindowOpen","windowData","id","img","title","authorName","liked","windowSlice","name","reducers","openLargeWindow","state","closeLargeOpenSmallWindow","changeSmallWindow","action","newTitle","newAuthor","newImg","payload","window","find","undefined","actions","reducer"],"sources":["D:/ReactTailwind/first_project/src/store/slices/windowSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport Juzz from '../../templates/icons/Juzz.jpeg'\r\nimport Dom50Logo from '../../templates/icons/Дом 50.jpeg'\r\n\r\nconst initialState = {\r\n    isLargeWindowOpen: false,\r\n    isSmallWindowOpen: false,\r\n    windowData: [\r\n        {\r\n            id: 1,\r\n            img: { Juzz },\r\n            title: 'Sheker',\r\n            authorName: 'TBRN',\r\n            liked: false,\r\n        },\r\n        {\r\n            id: 2,\r\n            img: { Dom50Logo },\r\n            title: 'Дом 50',\r\n            authorName: 'NOVЫЙ',\r\n            liked: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            img: { Dom50Logo },\r\n            title: 'Uide',\r\n            authorName: 'TBRN',\r\n            liked: true,\r\n        },\r\n    ],\r\n};\r\n\r\nconst windowSlice = createSlice({\r\n    name: 'windows',\r\n    initialState,\r\n    reducers: {\r\n        openLargeWindow(state) {\r\n            if (!state.isSmallWindowOpen) state.isLargeWindowOpen = true;\r\n        },\r\n        closeLargeOpenSmallWindow(state) {\r\n            state.isLargeWindowOpen = false;\r\n            state.isSmallWindowOpen = true;\r\n        },\r\n        changeSmallWindow(state, action) {\r\n            const { id, newTitle, newAuthor, newImg, liked } = action.payload;\r\n            const window = state.windowData.find(window => window.id === id);\r\n            if (window) {\r\n                // Изменение данных конкретного элемента\r\n                window.title = newTitle || window.title;\r\n                window.authorName = newAuthor || window.authorName;\r\n                window.img = newImg || window.img;\r\n                window.liked = liked !== undefined ? liked : window.liked;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { openLargeWindow, closeLargeOpenSmallWindow, changeSmallWindow } = windowSlice.actions;\r\n\r\nexport default windowSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,iCAAiC;AAClD,OAAOC,SAAS,MAAM,mCAAmC;AAEzD,MAAMC,YAAY,GAAG;EACjBC,iBAAiB,EAAE,KAAK;EACxBC,iBAAiB,EAAE,KAAK;EACxBC,UAAU,EAAE,CACR;IACIC,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;MAAEP;IAAK,CAAC;IACbQ,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC,EACD;IACIJ,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;MAAEN;IAAU,CAAC;IAClBO,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,OAAO;IACnBC,KAAK,EAAE;EACX,CAAC,EACD;IACIJ,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;MAAEN;IAAU,CAAC;IAClBO,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC;AAET,CAAC;AAED,MAAMC,WAAW,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,SAAS;EACfV,YAAY;EACZW,QAAQ,EAAE;IACNC,eAAeA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACA,KAAK,CAACX,iBAAiB,EAAEW,KAAK,CAACZ,iBAAiB,GAAG,IAAI;IAChE,CAAC;IACDa,yBAAyBA,CAACD,KAAK,EAAE;MAC7BA,KAAK,CAACZ,iBAAiB,GAAG,KAAK;MAC/BY,KAAK,CAACX,iBAAiB,GAAG,IAAI;IAClC,CAAC;IACDa,iBAAiBA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAC7B,MAAM;QAAEZ,EAAE;QAAEa,QAAQ;QAAEC,SAAS;QAAEC,MAAM;QAAEX;MAAM,CAAC,GAAGQ,MAAM,CAACI,OAAO;MACjE,MAAMC,MAAM,GAAGR,KAAK,CAACV,UAAU,CAACmB,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACjB,EAAE,KAAKA,EAAE,CAAC;MAChE,IAAIiB,MAAM,EAAE;QACR;QACAA,MAAM,CAACf,KAAK,GAAGW,QAAQ,IAAII,MAAM,CAACf,KAAK;QACvCe,MAAM,CAACd,UAAU,GAAGW,SAAS,IAAIG,MAAM,CAACd,UAAU;QAClDc,MAAM,CAAChB,GAAG,GAAGc,MAAM,IAAIE,MAAM,CAAChB,GAAG;QACjCgB,MAAM,CAACb,KAAK,GAAGA,KAAK,KAAKe,SAAS,GAAGf,KAAK,GAAGa,MAAM,CAACb,KAAK;MAC7D;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,eAAe;EAAEE,yBAAyB;EAAEC;AAAkB,CAAC,GAAGN,WAAW,CAACe,OAAO;AAEpG,eAAef,WAAW,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}