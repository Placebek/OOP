{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Juzz from '../../templates/icons/Juzz.jpeg';\nimport Dom50Logo from '../../templates/icons/Дом 50.jpeg';\n\n// Изначальное состояние\nconst initialState = {\n  windowData: [{\n    id: 1,\n    img: {\n      Juzz\n    },\n    title: 'Sheker',\n    authorName: 'TBRN',\n    liked: false\n  }, {\n    id: 2,\n    img: {\n      Dom50Logo\n    },\n    title: 'Дом 50',\n    authorName: 'NOVЫЙ',\n    liked: true\n  }, {\n    id: 3,\n    img: {\n      Dom50Logo\n    },\n    title: 'Uide',\n    authorName: 'TBRN',\n    liked: true\n  }],\n  // Данные всех песен\n  currentSong: null,\n  // Выбранная песня\n  isLargeWindowOpen: false,\n  // Состояние большого окна\n  isSmallWindowOpen: false // Состояние маленького окна\n};\n\n// Создание слайса Redux\nconst windowSlice = createSlice({\n  name: 'windows',\n  initialState,\n  reducers: {\n    // Действие для открытия большого окна\n    openLargeWindow(state) {\n      state.isLargeWindowOpen = true;\n      state.isSmallWindowOpen = false;\n    },\n    // Действие для закрытия большого окна и открытия маленького\n    closeLargeOpenSmallWindow(state) {\n      state.isLargeWindowOpen = false;\n      state.isSmallWindowOpen = true;\n    },\n    // Действие для выбора новой песни\n    changeSmallWindow(state, action) {\n      state.currentSong = action.payload; // Устанавливаем текущую выбранную песню\n      state.isSmallWindowOpen = true; // Открываем маленькое окно\n      state.isLargeWindowOpen = false; // Закрываем большое окно\n    },\n    // Можно добавить действие для загрузки данных музыки в состояние (если требуется)\n    loadMusicData(state, action) {\n      state.windowData = action.payload; // Загружаем данные всех песен\n    }\n  }\n});\n\n// Экспортируем действия\nexport const {\n  openLargeWindow,\n  closeLargeOpenSmallWindow,\n  changeSmallWindow,\n  loadMusicData\n} = windowSlice.actions;\n\n// Экспортируем редьюсер\nexport default windowSlice.reducer;","map":{"version":3,"names":["createSlice","Juzz","Dom50Logo","initialState","windowData","id","img","title","authorName","liked","currentSong","isLargeWindowOpen","isSmallWindowOpen","windowSlice","name","reducers","openLargeWindow","state","closeLargeOpenSmallWindow","changeSmallWindow","action","payload","loadMusicData","actions","reducer"],"sources":["D:/ReactTailwind/first_project/src/store/slices/windowSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport Juzz from '../../templates/icons/Juzz.jpeg'\r\nimport Dom50Logo from '../../templates/icons/Дом 50.jpeg'\r\n\r\n// Изначальное состояние\r\nconst initialState = {\r\n    windowData: [{\r\n        id: 1,\r\n        img: { Juzz },\r\n        title: 'Sheker',\r\n        authorName: 'TBRN',\r\n        liked: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        img: { Dom50Logo },\r\n        title: 'Дом 50',\r\n        authorName: 'NOVЫЙ',\r\n        liked: true,\r\n    },\r\n    {\r\n        id: 3,\r\n        img: { Dom50Logo },\r\n        title: 'Uide',\r\n        authorName: 'TBRN',\r\n        liked: true,\r\n    },],  // Данные всех песен\r\n    currentSong: null,  // Выбранная песня\r\n    isLargeWindowOpen: false,  // Состояние большого окна\r\n    isSmallWindowOpen: false,  // Состояние маленького окна\r\n};\r\n\r\n// Создание слайса Redux\r\nconst windowSlice = createSlice({\r\n    name: 'windows',\r\n    initialState,\r\n    reducers: {\r\n        // Действие для открытия большого окна\r\n        openLargeWindow(state) {\r\n            state.isLargeWindowOpen = true;\r\n            state.isSmallWindowOpen = false;\r\n        },\r\n        // Действие для закрытия большого окна и открытия маленького\r\n        closeLargeOpenSmallWindow(state) {\r\n            state.isLargeWindowOpen = false;\r\n            state.isSmallWindowOpen = true;\r\n        },\r\n        // Действие для выбора новой песни\r\n        changeSmallWindow(state, action) {\r\n            state.currentSong = action.payload;  // Устанавливаем текущую выбранную песню\r\n            state.isSmallWindowOpen = true;  // Открываем маленькое окно\r\n            state.isLargeWindowOpen = false;  // Закрываем большое окно\r\n        },\r\n        // Можно добавить действие для загрузки данных музыки в состояние (если требуется)\r\n        loadMusicData(state, action) {\r\n            state.windowData = action.payload;  // Загружаем данные всех песен\r\n        },\r\n    },\r\n});\r\n\r\n// Экспортируем действия\r\nexport const { openLargeWindow, closeLargeOpenSmallWindow, changeSmallWindow, loadMusicData } = windowSlice.actions;\r\n\r\n// Экспортируем редьюсер\r\nexport default windowSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,iCAAiC;AAClD,OAAOC,SAAS,MAAM,mCAAmC;;AAEzD;AACA,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;IACTC,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;MAAEL;IAAK,CAAC;IACbM,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC,EACD;IACIJ,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;MAAEJ;IAAU,CAAC;IAClBK,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,OAAO;IACnBC,KAAK,EAAE;EACX,CAAC,EACD;IACIJ,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE;MAAEJ;IAAU,CAAC;IAClBK,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC,CAAE;EAAG;EACNC,WAAW,EAAE,IAAI;EAAG;EACpBC,iBAAiB,EAAE,KAAK;EAAG;EAC3BC,iBAAiB,EAAE,KAAK,CAAG;AAC/B,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,SAAS;EACfX,YAAY;EACZY,QAAQ,EAAE;IACN;IACAC,eAAeA,CAACC,KAAK,EAAE;MACnBA,KAAK,CAACN,iBAAiB,GAAG,IAAI;MAC9BM,KAAK,CAACL,iBAAiB,GAAG,KAAK;IACnC,CAAC;IACD;IACAM,yBAAyBA,CAACD,KAAK,EAAE;MAC7BA,KAAK,CAACN,iBAAiB,GAAG,KAAK;MAC/BM,KAAK,CAACL,iBAAiB,GAAG,IAAI;IAClC,CAAC;IACD;IACAO,iBAAiBA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAC7BH,KAAK,CAACP,WAAW,GAAGU,MAAM,CAACC,OAAO,CAAC,CAAE;MACrCJ,KAAK,CAACL,iBAAiB,GAAG,IAAI,CAAC,CAAE;MACjCK,KAAK,CAACN,iBAAiB,GAAG,KAAK,CAAC,CAAE;IACtC,CAAC;IACD;IACAW,aAAaA,CAACL,KAAK,EAAEG,MAAM,EAAE;MACzBH,KAAK,CAACb,UAAU,GAAGgB,MAAM,CAACC,OAAO,CAAC,CAAE;IACxC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,eAAe;EAAEE,yBAAyB;EAAEC,iBAAiB;EAAEG;AAAc,CAAC,GAAGT,WAAW,CAACU,OAAO;;AAEnH;AACA,eAAeV,WAAW,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}