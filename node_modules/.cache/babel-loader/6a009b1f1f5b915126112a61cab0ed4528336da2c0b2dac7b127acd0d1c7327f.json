{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactTailwind\\\\first_project\\\\src\\\\components\\\\MusicList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './ModalAnimations.css';\nimport MusicModalWindow from \"./modals/MusicModalWindow\";\nimport SmallWindow from \"./modals/MusicSmallModalWindow\";\nimport MusicItems from \"./UI/button/MusicItems\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeLargeOpenSmallWindow, openLargeWindow, changeSmallWindow } from '../store/slices/windowSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MusicList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const windowState = useSelector(state => state.window);\n  const {\n    windowData,\n    isLargeWindowOpen,\n    isSmallWindowOpen,\n    selectedMusic\n  } = windowState || {};\n  const handleSelectMusic = music => {\n    dispatch(changeSmallWindow(music));\n    dispatch(openLargeWindow());\n    console.log(selectedMusic);\n  };\n  const LargeWindowClose = () => {\n    dispatch(closeLargeOpenSmallWindow());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [windowData.map(music => {\n      const checkLike = music.liked ? '#FF7373' : 'currentColor';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1 pt-0.5 ml-3  border-0 border-t-2 border-stone-400/50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-nowrap\",\n          onClick: () => handleSelectMusic(music),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MusicItems, {\n              props: music\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-auto mr-3\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              strokeWidth: 1.5,\n              stroke: checkLike,\n              className: \"size-8\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                d: \"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, music.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    }), selectedMusic && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MusicModalWindow, {\n        props: selectedMusic,\n        isOpen: isLargeWindowOpen,\n        isOpenSmallWindow: isSmallWindowOpen,\n        closeWindow: LargeWindowClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SmallWindow, {\n          musics: selectedMusic,\n          isOpenSmallWindow: isSmallWindowOpen,\n          closeSmallWindow: LargeWindowClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(MusicList, \"hJmIopfhwRc69aDlPEGfAgT01dw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MusicList;\nexport default MusicList;\nvar _c;\n$RefreshReg$(_c, \"MusicList\");","map":{"version":3,"names":["React","MusicModalWindow","SmallWindow","MusicItems","useDispatch","useSelector","closeLargeOpenSmallWindow","openLargeWindow","changeSmallWindow","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicList","_s","dispatch","windowState","state","window","windowData","isLargeWindowOpen","isSmallWindowOpen","selectedMusic","handleSelectMusic","music","console","log","LargeWindowClose","children","map","checkLike","liked","className","onClick","props","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","id","isOpen","isOpenSmallWindow","closeWindow","musics","closeSmallWindow","_c","$RefreshReg$"],"sources":["D:/ReactTailwind/first_project/src/components/MusicList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './ModalAnimations.css';\r\nimport MusicModalWindow from \"./modals/MusicModalWindow\";\r\nimport SmallWindow from \"./modals/MusicSmallModalWindow\";\r\nimport MusicItems from \"./UI/button/MusicItems\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeLargeOpenSmallWindow, openLargeWindow, changeSmallWindow } from '../store/slices/windowSlice';\r\n\r\nconst MusicList = () => {\r\n    const dispatch = useDispatch();\r\n    const windowState = useSelector(state => state.window);\r\n    const { windowData, isLargeWindowOpen, isSmallWindowOpen, selectedMusic } = windowState || {};\r\n\r\n    const handleSelectMusic = (music) => {\r\n        dispatch(changeSmallWindow(music));\r\n        dispatch(openLargeWindow());\r\n        console.log(selectedMusic)\r\n    };\r\n\r\n\r\n    const LargeWindowClose = () => {\r\n        dispatch(closeLargeOpenSmallWindow());\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {windowData.map((music) => {\r\n                const checkLike = music.liked ? '#FF7373' : 'currentColor';\r\n                return (\r\n                    <div key={music.id} className=\"mt-1 pt-0.5 ml-3  border-0 border-t-2 border-stone-400/50\">\r\n                        <div className=\"flex flex-nowrap\" onClick={() => handleSelectMusic(music)}>\r\n                            <div>\r\n                                <MusicItems props={music} />\r\n                            </div>\r\n                            <div className=\"ml-auto mr-3\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke={checkLike} className=\"size-8\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n            {selectedMusic && (\r\n                <>\r\n                    <MusicModalWindow\r\n                        props={selectedMusic}\r\n                        isOpen={isLargeWindowOpen}\r\n                        isOpenSmallWindow={isSmallWindowOpen}\r\n                        closeWindow={LargeWindowClose}\r\n                    />\r\n                    <div>\r\n                        <SmallWindow\r\n                            musics={selectedMusic}\r\n                            isOpenSmallWindow={isSmallWindowOpen}\r\n                            closeSmallWindow={LargeWindowClose}\r\n\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MusicList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}